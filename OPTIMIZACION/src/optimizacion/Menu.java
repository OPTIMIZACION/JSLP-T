/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package optimizacion;

import java.io.FileNotFoundException;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author MAICK
 */
public class Menu extends javax.swing.JFrame {

    
    VentanaEntradaDatos pLineal;
    VentanaEntradaDatos1 transporte;
    String[][] matrizG;
    String[] parametros;
    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("PROGRAMACION LINEAL");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonLineal(evt);
            }
        });

        jButton2.setText("TRANSPORTE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("ACERCA DE...");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clickAcercaDe(evt);
            }
        });

        jButton4.setText("Abrir");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonAbrir(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("JSLP&T");

        jLabel3.setText("(Java Software Linear Programming and Transportation)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jLabel3)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonLineal(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLineal
        
        pLineal= new VentanaEntradaDatos();
        pLineal.setVisible(true);
        
        this.setVisible(false);
        
    }//GEN-LAST:event_botonLineal

    private void botonAbrir(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAbrir
        
        String path="";//creamos una variable global para guardar el path
        String titulo="";
        int variables=0,restricciones=0;
        
        //empezamos implementando la clase JFileChooser para abrir archivos
        JFileChooser JFC = new JFileChooser();
        //filtro que muestra solo los archivos con extension *.edu
        JFC.setFileFilter(new FileNameExtensionFilter("todos los archivos *.TXT", "txt","TXT"));
        //se comprueba si se ha dado al boton aceptar
        int abrir = JFC.showDialog(null, "Abrir");
        if (abrir == JFileChooser.APPROVE_OPTION) {
            FileReader FR = null;
            BufferedReader BR = null;

            try {
                //abro el fichero y creo un BufferedReader para hacer
                //una lectura comoda (tener el metodo readLine();)
                File archivo = JFC.getSelectedFile();//abre un archivo .lengf
                
                //evitar abrir archivo con otra extension que no sea *.LFP
                String PATH = JFC.getSelectedFile().getAbsolutePath();
                if(PATH.endsWith(".txt")||PATH.endsWith(".TXT")){
                    
                    FR = new FileReader(archivo);
                    BR = new BufferedReader(FR);
                    
                    //leyendo el archivo
                    String linea;//variable para leer linea por linea el archivo de entrada
                    
                    if(path.compareTo(archivo.getAbsolutePath())==0){
                        JOptionPane.showMessageDialog(this, "Archivo Abierto","Oops! Error", JOptionPane.ERROR_MESSAGE);
                    }
                    else
                    {
                        /////////////////INICIA PROCESO DE LECTURA DE ARCHIVO Y TRASPASO DE DATOS
                        path = archivo.getAbsolutePath();
                                                
                        linea=BR.readLine();
                        if( linea.equals("3000") )
                        {
                            //me desago de tres lineas que no necesito
                            BR.readLine();
                            BR.readLine();
                            BR.readLine();
                                              
                            //obtenemos los datos del archivo
                            titulo=BR.readLine();
                            variables=Integer.parseInt(BR.readLine());
                            restricciones=Integer.parseInt(BR.readLine());
                            
                            //se inicializa la matriz teniendo los datos del archivo}
                            matrizG = new String [restricciones+4] [variables+3];
                            
                            //controladores para llenar la matriz que se enviar√° a la clase del problema
                            int c=variables+3;
                            int f=restricciones+4;
                                  
                            for(int i=0 ; i < f ; i++)
                            { 
                                for(int j=0 ; j < c ; j++)
                                {
                                    //System.out.println("sgte: "+BR.readLine());
                                    if( (linea=BR.readLine())!=null )
                                    {
                                        matrizG[i][j]=linea;
                                        System.out.print(matrizG[i][j]+" ' ");
                                    }

                                }
                                System.out.println("");
                                
                            }
                            
                            pLineal= new VentanaEntradaDatos(titulo, variables, restricciones, matrizG);
                            pLineal.setVisible(true);
                            this.setVisible(false);
                            
                        
                        }
                        else if(linea.equals("5000"))
                        {
                            BR.readLine();
                            BR.readLine();
                            BR.readLine();
                                              
                            //obtenemos los datos del archivo
                            titulo=BR.readLine();
                            int origenes=Integer.parseInt(BR.readLine());
                            int destinos=Integer.parseInt(BR.readLine());
                            
                            //se inicializa la matriz teniendo los datos del archivo}
                            matrizG = new String [origenes+2] [destinos+3];
                            
                            //controladores para llenar la matriz que se enviar√° a la clase del problema
                            int c=destinos+3;
                            int f=origenes+2;
                                  
                            for(int i=0 ; i < f ; i++)
                            { 
                                for(int j=0 ; j < c ; j++)
                                {
                                    if( (linea=BR.readLine())!=null )
                                    {
                                        matrizG[i][j]=linea;
                                        System.out.print(matrizG[i][j]+" ' ");
                                    }

                                }
                                System.out.println("");
                                
                            }
                            
                            transporte= new VentanaEntradaDatos1(titulo, origenes, destinos, matrizG);
                            transporte.setVisible(true);
                            this.setVisible(false);
                        }
                        
                    }
                    
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Archivo no soportado","Oops! Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
                //Logger.getLogger(fileChooser.class.getName()).log(Level.SEVERE, null, ex);
            //cerramos el fichero, para asegurar que se cierra tanto
            // si todo va bien si salta una excepcion
            } catch (IOException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
            try {
                if(null!= FR){
                    FR.close();
                }

            } catch (IOException ex) {
                ex.printStackTrace();
                //Logger.getLogger(fileChooser.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
                              
            }
        }
        
    }//GEN-LAST:event_botonAbrir

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        VentanaEntradaDatos1 vet=new VentanaEntradaDatos1();
        vet.setVisible(true);
        
        this.setVisible(false);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void clickAcercaDe(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickAcercaDe
        AcercaDe acerca=new AcercaDe(this,true);
        acerca.setVisible(true);
    }//GEN-LAST:event_clickAcercaDe

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
